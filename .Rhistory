# join with POI and brand data
safeGraph <- safeGraph %>%
left_join(core_poi, by=c("placekey"="placekey"),keep=FALSE) %>%
left_join(brand_info, by=c("safegraph_brand_ids"="safegraph_brand_id"),keep=FALSE)
# filter into philly
safeGraph <- patternAllMonth %>%
filter(city == "Philadelphia")
# join with POI and brand data
safeGraph <- safeGraph %>%
left_join(core_poi, by=c("placekey"="placekey"),keep=FALSE) %>%
left_join(brand_info, by=c("safegraph_brand_ids"="safegraph_brand_id"),keep=FALSE)
View(brand_info)
# join with POI and brand data
safeGraph <- safeGraph %>%
left_join(core_poi, by=c("placekey"="placekey"),keep=FALSE)
View(safeGraph)
# create geometry from lat & lng
safeGraph.geo <-
safeGraph %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant", na.fail=FALSE) %>% st_transform(crs = crs)
# Keep only ppr sites
#712190:Nature Parks and Other Similar Institutions;
#713990:All Other Amusement and Recreation Industries;
#713940: Fitness and Recreational Sports Centers；
#711310：Promoters of Performing Arts, Sports, and Similar Events
parks <- safeGraph.geo %>%
dplyr::select(placekey, naics_code, location_name) %>%
distinct() %>%
filter(naics_code %in% c(712190, 713990, 713940, 711310) | str_detect(location_name, "Park") | str_detect(location_name, "Playground") | str_detect(location_name, "Recreation Center")) %>%
filter(str_detect(location_name, "Parking", negate = TRUE))
View(safeGraph.geo)
# filter into philly
safeGraph <- patternAllMonth %>%
filter(city == "Philadelphia")
# join with POI and brand data
safeGraph <- safeGraph %>%
left_join(core_poi, by=c("placekey"="placekey","parent_placekey","location_name","street_address","city","region","postal_code","safegraph_brand_ids","brands"),keep=FALSE)
# create geometry from lat & lng
safeGraph.geo <-
safeGraph %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant", na.fail=FALSE) %>% st_transform(crs = crs)
# Keep only ppr sites
#712190:Nature Parks and Other Similar Institutions;
#713990:All Other Amusement and Recreation Industries;
#713940: Fitness and Recreational Sports Centers；
#711310：Promoters of Performing Arts, Sports, and Similar Events
parks <- safeGraph.geo %>%
dplyr::select(placekey, naics_code, location_name) %>%
distinct() %>%
filter(naics_code %in% c(712190, 713990, 713940, 711310) | str_detect(location_name, "Park") | str_detect(location_name, "Playground") | str_detect(location_name, "Recreation Center")) %>%
filter(str_detect(location_name, "Parking", negate = TRUE))
# join filtered safeGraph place with ppr property
property_safe_join <- st_join(property, parks %>% dplyr::select(placekey, geometry), left=FALSE)
st_crs(parks)
# Keep only ppr sites
#712190:Nature Parks and Other Similar Institutions;
#713990:All Other Amusement and Recreation Industries;
#713940: Fitness and Recreational Sports Centers；
#711310：Promoters of Performing Arts, Sports, and Similar Events
parks <- safeGraph.geo %>%
dplyr::select(placekey, naics_code, location_name) %>%
distinct() %>%
filter(naics_code %in% c(712190, 713990, 713940, 711310) | str_detect(location_name, "Park") | str_detect(location_name, "Playground") | str_detect(location_name, "Recreation Center")) %>%
filter(str_detect(location_name, "Parking", negate = TRUE)) %>%
st_crs(4326)
# join filtered safeGraph place with ppr property
property_safe_join <- st_join(property, parks %>% dplyr::select(placekey, geometry), left=FALSE)
# join filtered safeGraph place with ppr property
property_safe_join <- st_join(property, parks %>% dplyr::select(placekey), left=FALSE)
# Keep only ppr sites
#712190:Nature Parks and Other Similar Institutions;
#713990:All Other Amusement and Recreation Industries;
#713940: Fitness and Recreational Sports Centers；
#711310：Promoters of Performing Arts, Sports, and Similar Events
parks <- safeGraph.geo %>%
dplyr::select(placekey, naics_code, location_name) %>%
distinct() %>%
filter(naics_code %in% c(712190, 713990, 713940, 711310) | str_detect(location_name, "Park") | str_detect(location_name, "Playground") | str_detect(location_name, "Recreation Center")) %>%
filter(str_detect(location_name, "Parking", negate = TRUE)) %>%
st_transform(crs = 4326)
# join filtered safeGraph place with ppr property
property_safe_join <- st_join(property, parks %>% dplyr::select(placekey, geometry), left=FALSE)
# join with POI and brand data
safeGraph <- safeGraph %>%
left_join(core_poi, by=c("placekey"="placekey"),keep=FALSE)
# filter into philly
safeGraph <- patternAllMonth %>%
filter(city == "Philadelphia")
# join with POI and brand data
safeGraph <- safeGraph %>%
left_join(core_poi, by=c("placekey"="placekey"),keep=FALSE)
# filter into philly
safeGraph <- patternAllMonth %>%
filter(city == "Philadelphia")
# join with POI and brand data
safeGraph <- safeGraph %>%
left_join(core_poi, by=c("placekey"="placekey"),keep=FALSE)
# filter into philly
safeGraph <- patternAllMonth %>%
filter(city == "Philadelphia")
# join with POI and brand data
# safeGraph <- safeGraph %>%
#   left_join(core_poi, by=c("placekey"="placekey"),keep=FALSE)
safeGraph <- safeGraph %>%
left_join(core_poi, by=c("placekey","parent_placekey","location_name","street_address","city","region","postal_code","safegraph_brand_ids","brands"),keep=FALSE) %>%
left_join(brand_info, by=c("safegraph_brand_ids"="safegraph_brand_id","brands"="brand_name","top_category","sub_category","naics_code"),keep=FALSE)
# filter into philly
safeGraph <- patternAllMonth %>%
filter(city == "Philadelphia")
# join with POI and brand data
safeGraph <- safeGraph %>%
left_join(core_poi %>% dplyr::select(placekey,top_category,sub_category,naics_code,latitude,longitude),
by=c("placekey"="placekey"),keep=FALSE)
# create geometry from lat & lng
safeGraph.geo <-
safeGraph %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant", na.fail=FALSE) %>% st_transform(crs = crs)
# Keep only ppr sites
#712190:Nature Parks and Other Similar Institutions;
#713990:All Other Amusement and Recreation Industries;
#713940: Fitness and Recreational Sports Centers；
#711310：Promoters of Performing Arts, Sports, and Similar Events
parks <- safeGraph.geo %>%
dplyr::select(placekey, naics_code, location_name) %>%
distinct() %>%
filter(naics_code %in% c(712190, 713990, 713940, 711310) | str_detect(location_name, "Park") | str_detect(location_name, "Playground") | str_detect(location_name, "Recreation Center")) %>%
filter(str_detect(location_name, "Parking", negate = TRUE)) %>%
st_transform(crs = 4326)
PPRmoves <- safeGraph.geo %>%
filter(placekey %in% as.list(parks$placekey))
# join filtered safeGraph place with ppr property
property_safe_join <- st_join(property, parks %>% dplyr::select(placekey, geometry), left=FALSE)
ggplot(parks) +geom_sf()
ggplot(property) +geom_sf()
# map the location of properties in district 7,8,9
ggplot() +
geom_sf(data=property %>% filter(PPR_DIST %in% c(7,8,9)),color=palette1_main,fill = palette1_main)+
geom_sf(data=st_union(pprDestServiceArea %>% filter(PPR_DIST ==7)),color="black",size=2,fill = "transparent")+
geom_sf(data=st_union(pprDestServiceArea %>% filter(PPR_DIST ==8)),color="black",size=2,fill = "transparent")+
geom_sf(data=st_union(pprDestServiceArea %>% filter(PPR_DIST ==9)),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDestServiceArea,color="black",size=0.75,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
property <- st_join(st_centroid(pprProperties),pprServiceArea,left=TRUE) %>%
st_drop_geometry() %>%
left_join(pprProperties %>% dplyr::select(OBJECTID,geometry),by='OBJECTID') %>%
st_sf(crs = 4326) %>%
dplyr::select(-Shape__Length,-Shape__Area,-Shape_Leng,-Shape_Area) %>%
rename('ServiceAreaID' = 'INFO')
# map the location of properties in district 7,8,9
ggplot() +
geom_sf(data=property %>% filter(PPR_DIST %in% c(7,8,9)),color=palette1_main,fill = palette1_main)+
geom_sf(data=st_union(pprDestServiceArea %>% filter(PPR_DIST ==7)),color="black",size=2,fill = "transparent")+
geom_sf(data=st_union(pprDestServiceArea %>% filter(PPR_DIST ==8)),color="black",size=2,fill = "transparent")+
geom_sf(data=st_union(pprDestServiceArea %>% filter(PPR_DIST ==9)),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDestServiceArea,color="black",size=0.75,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
ggplot(property)+geom_sf()
property <- st_join(st_centroid(pprProperties),pprServiceArea,left=TRUE) %>%
st_drop_geometry() %>%
left_join(pprProperties %>% dplyr::select(OBJECTID,geometry),by='OBJECTID') %>%
st_sf() %>%
dplyr::select(-Shape__Length,-Shape__Area,-Shape_Leng,-Shape_Area) %>%
rename('ServiceAreaID' = 'INFO')
ggplot(property)+geom_sf()
property <- st_join(st_centroid(pprProperties),pprServiceArea,left=TRUE) %>%
st_drop_geometry() %>%
left_join(pprProperties %>% dplyr::select(OBJECTID,geometry),by='OBJECTID') %>%
st_sf() %>%
st_transform(crs = 4326)
property <- st_join(st_centroid(pprProperties),pprServiceArea,left=TRUE) %>%
st_drop_geometry() %>%
left_join(pprProperties %>% dplyr::select(OBJECTID,geometry),by='OBJECTID') %>%
st_sf() %>%
st_transform(crs = 4326) %>%
dplyr::select(-Shape__Length,-Shape__Area,-Shape_Leng,-Shape_Area) %>%
rename('ServiceAreaID' = 'INFO')
ggplot(property)+geom_sf()
# map the location of properties in district 7,8,9
ggplot() +
geom_sf(data=property %>% filter(PPR_DIST %in% c(7,8,9)),color=palette1_main,fill = palette1_main)+
geom_sf(data=st_union(pprDestServiceArea %>% filter(PPR_DIST ==7)),color="black",size=2,fill = "transparent")+
geom_sf(data=st_union(pprDestServiceArea %>% filter(PPR_DIST ==8)),color="black",size=2,fill = "transparent")+
geom_sf(data=st_union(pprDestServiceArea %>% filter(PPR_DIST ==9)),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDestServiceArea,color="black",size=0.75,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
ggplot(property) +geom_sf()
# join filtered safeGraph place with ppr property
property_safe_join <- st_join(property, parks %>% dplyr::select(placekey, geometry), left=FALSE)
# count
print(paste0("The number of PPR properties is ", n_distinct(property$PPR.Site.Name)))
View(property)
View(property)
View(property_safe_join)
# filter into philly
safeGraph <- patternAllMonth %>%
filter(city == "Philadelphia")
# join with POI and brand data
safeGraph <- safeGraph %>%
left_join(core_poi %>% dplyr::select(placekey,top_category,sub_category,naics_code,latitude,longitude),
by=c("placekey"="placekey"),keep=FALSE)
# safeGraph <- safeGraph %>%
#   left_join(core_poi, by=c("placekey","parent_placekey","location_name","street_address","city","region","postal_code","safegraph_brand_ids","brands"),keep=FALSE) %>%
#   left_join(brand_info, by=c("safegraph_brand_ids"="safegraph_brand_id","brands"="brand_name","top_category","sub_category","naics_code"),keep=FALSE)
# create geometry from lat & lng
safeGraph.geo <-
safeGraph %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant", na.fail=FALSE) %>% st_transform(crs = crs)
st_write(safeGraph.geo,"data/output/safeGraph.geo.GeoJSON")
st_write(safeGraph.geo,"data/output/safeGraph.geo.GeoJSON")
## set future running stratege
library(furrr)
# change workers number by yourself
plan(multiprocess, workers = 10)
# keep congeneric bussiness
congenericMoves <-
safeGraph.geo %>%
filter(top_category %in% c("Promoters of Performing Arts, Sports, and Similar Events",
"Other Amusement and Recreation Industries",
"Museums, Historical Sites, and Similar Institutions") | str_detect(location_name, "Park") | str_detect(location_name, "Playground") | str_detect(location_name, "Recreation Center")) %>%
filter(str_detect(location_name, "Parking", negate = TRUE))
# Keep only ppr sites
#712190:Nature Parks and Other Similar Institutions;
#713990:All Other Amusement and Recreation Industries;
#713940: Fitness and Recreational Sports Centers；
#711310：Promoters of Performing Arts, Sports, and Similar Events
parks <- safeGraph.geo %>%
dplyr::select(placekey, naics_code, location_name) %>%
distinct() %>%
filter(naics_code %in% c(712190, 713990, 713940, 711310) | str_detect(location_name, "Park") | str_detect(location_name, "Playground") | str_detect(location_name, "Recreation Center")) %>%
filter(str_detect(location_name, "Parking", negate = TRUE)) %>%
st_transform(crs = 4326)
PPRmoves <- safeGraph.geo %>%
filter(placekey %in% as.list(parks$placekey))
# spatial join with ppr property - to be continued
# we need ask instructors which data to model, but for now just take PPRmoves
st_write(PPRmoves,"data/output/PPRmoves.GeoJSON")
st_write(PPRmoves,"data/output/PPRmoves.GeoJSON")
ggplot()+
geom_Sf(data=property)+
geom_sf(data=parks)
ggplot()+
geom_sf(data=property)+
geom_sf(data=parks)
map(property)
mapview(property)
library(mapview)
mapview(property)+mapview(parks)
mapview(property)+mapview(parks,colors=red)
?mapview
mapview(property)+mapview(parks,col=red)
mapview(property)+mapview(parks,col='red')
mapview(property)+mapview(parks,col.regions = "green")
mapview(property_safe_join)
# join filtered safeGraph place with ppr property
property_safe_join <- st_join(property, parks %>% dplyr::select(placekey, geometry), left=FALSE) %>% na.omit(placekey)
View(property_safe_join)
mapview(property)+mapview(parks,col.regions = "green")
View(property_safe_join)
# join filtered safeGraph place with ppr property
st_crs(property)
property_safe_join <- st_join(property %>%st_buffer(10) ,
parks %>% dplyr::select(placekey, geometry), left=FALSE) %>% na.omit(placekey)
View(property_safe_join)
property_safe_join <- st_join(property %>%st_buffer(10) ,
parks %>% dplyr::select(placekey, geometry), left=FALSE)
View(property_safe_join)
property_safe_join <- st_join(property %>%st_buffer(10) ,
parks %>% dplyr::select(placekey, geometry), left=FALSE) %>% drop_na(placekey)
property_safe_join <- st_join(property,
parks %>% dplyr::select(placekey, geometry), left=FALSE) %>% drop_na(placekey)
property_safe_join <- st_join(property,
parks %>% dplyr::select(placekey, geometry), left=FALSE)
property_safe_join <- st_join(property,
parks %>% dplyr::select(placekey, geometry), left=FALSE) %>% drop_na(placekey)
# count
print(paste0("The number of PPR properties is ", n_distinct(property$PPR.Site.Name)))
# count
print(paste0("The number of PPR properties is ", n_distinct(property$PUBLIC_NAME)))
print(paste0("The number joined properties is ", n_distinct(property_safe_join$PUBLIC_NAME)))
property_safe_join <- st_join(property %>% st_buffer(10),
parks %>% dplyr::select(placekey, geometry), left=FALSE) %>% drop_na(placekey)
# count
print(paste0("The number of PPR properties is ", n_distinct(property$PUBLIC_NAME)))
print(paste0("The number joined properties is ", n_distinct(property_safe_join$PUBLIC_NAME)))
mapview(property)+mapview(parks,col.regions = "green")
propertyWithPlaceKey <- st_join(property %>% st_buffer(10),
parks %>% dplyr::select(placekey, geometry), left=FALSE) %>% drop_na(placekey)
View(propertyWithPlaceKey)
View(program2021.join)
View(property)
propertyWithPlaceKey <- st_join(property %>% st_buffer(10),parks %>% dplyr::select(placekey, geometry),left=FALSE) %>%
st_drop(geometry) %>%
left_join(property %>% dplyr::select(OBJECTID),by=('OBJECTID'='OBJECTID')) %>%
st_sf() %>%
st_transform(crs=4326) %>%
drop_na(placekey)
propertyWithPlaceKey <- st_join(property %>% st_buffer(10),parks %>% dplyr::select(placekey, geometry),left=FALSE) %>%
st_drop_geometry() %>%
left_join(property %>% dplyr::select(OBJECTID),by=('OBJECTID'='OBJECTID')) %>%
st_sf() %>%
st_transform(crs=4326) %>%
drop_na(placekey)
program2021.joinWithPlaceKey <- program2021.join %>%
left_join(., propertyWithPlaceKey, by =c("OBJECTID"="OBJECTID"))
View(program2021.join)
program2021.joinWithPlaceKey <- program2021.join %>%
left_join(., propertyWithPlaceKey, by =c("PPR_Properties_ObjectID"="OBJECTID"))
program2021.joinWithPlaceKey <- program2021.join %>%
left_join(propertyWithPlaceKey, by =c("PPR_Properties_ObjectID"="OBJECTID"))
program2021.join <- left_join(program2021.clean, facilityID, by =c("FacilityID")) %>%
left_join(., property, by =c("PPR_Properties_ObjectID"="OBJECTID"))
program2021.clean <- st_read("data/output/program2021.clean.csv")
program2021.join <- left_join(program2021.clean, facilityID, by =c("FacilityID")) %>%
left_join(., property, by =c("PPR_Properties_ObjectID"="OBJECTID"))
View(facilityID)
program2021.clean <- st_read("data/output/program2021.clean.csv")
View(program2021.clean)
program2021.join <- left_join(program2021.clean, facilityID, by =c("FacilityID"))
View(property)
program2021.join <- left_join(program2021.clean, facilityID, by =c("FacilityID")) %>%
left_join(., property, by =c("PPR_Properties_ObjectID"="OBJECTID"))
# get the failed joining items
program2021.join.na <- program2021.join[is.na(program2021.join$PPR_Properties_ObjectID),]
# filter the failed joining items
program2021.join <- program2021.join %>% na.omit(PPR_Properties_ObjectID)
program2021.joinWithPlaceKey <- program2021.join %>%
left_join(propertyWithPlaceKey, by =c("PPR_Properties_ObjectID"="OBJECTID"))
program2021.joinWithPlaceKey <- program2021.join %>% drop_na(placekey)
View(program2021.joinWithPlaceKey)
View(propertyWithPlaceKey)
program2021.joinWithPlaceKey <- program2021.join %>%
left_join(propertyWithPlaceKey %>% dplyr::select(placekey,OBJECTID), by =c("PPR_Properties_ObjectID"="OBJECTID"))
program2021.joinWithPlaceKey <- program2021.joinWithPlaceKey %>% drop_na(placekey)
View(program2021.joinWithPlaceKey)
program2021.joinWithPlaceKey <- program2021.join %>%
left_join(propertyWithPlaceKey %>%
st_drop_geometry()%>%
dplyr::select(placekey,OBJECTID), by =c("PPR_Properties_ObjectID"="OBJECTID"))
program2021.joinWithPlaceKey <- program2021.joinWithPlaceKey %>% drop_na(placekey)
#This following code to unnest the pupularity_by_hout data is different from the above code. Because the pprMoves is read into the R, which directly delete the '['']'
# unnest visit Count data
visitCount <-
PPRmoves %>%
select(placekey, date_range_start, date_range_end, visits_by_day) %>%
mutate(date_range_start = as_date(date_range_start),
date_range_end = as_date(date_range_end)) %>%
dplyr::select(-date_range_end) %>%
mutate(visits_by_day = future_map(visits_by_day, function(x){
unlist(x) %>%
as_tibble() %>%
rowid_to_column(var = "day") %>%
mutate(visits = value) %>%
dplyr::select(-value)
})) %>%
unnest(cols = c("visits_by_day"))
st_write(visitCount,"data/output/visitCount.GeoJSON")
visitCount <- st_read("data/output/visitCount.GeoJSON")
# unnest popularity_by_hour data
visitHour <-
PPRmoves %>%
select(placekey, popularity_by_hour, date_range_start) %>%
mutate(date_range_start = as_date(date_range_start),
month =  month(date_range_start)) %>%
dplyr::select(-date_range_start) %>%
mutate(popularity_by_hour = future_map(popularity_by_hour, function(x){
unlist(x) %>%
as_tibble() %>%
rowid_to_column(var = "hour") %>%
rename(visit = value)
}))%>%
unnest(popularity_by_hour)
#
st_write(visitHour,"data/output/visitHour.GeoJSON")
visitHour <- st_read("data/output/visitHour.GeoJSON")
# unnest the origin-destination data
originCount <-
PPRmoves %>%
select(placekey, visitor_home_cbgs, date_range_start) %>%
mutate(date_range_start = as_date(date_range_start),
month =  month(date_range_start)) %>%
dplyr::select(-date_range_start) %>%
mutate(visitor_home_cbgs = future_map(visitor_home_cbgs, function(x){
jsonlite::fromJSON(x) %>%
as_tibble()
})) %>%
unnest(visitor_home_cbgs)
gc()
library(vroom)
library(sf)
library(ggplot2)
library(ggmap)
library(kableExtra)
library(tidyverse)
library(data.table)
#remotes::install_github("CityOfPhiladelphia/rphl")
library(rphl)
library(lubridate)
library(furrr)
library(tidycensus)
ll <- function(dat, proj4 = 4326){st_transform(dat, proj4)}
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
#windowsFonts(font = windowsFont('Helvetica'))
crs = 'EPSG:2272'
plotTheme <- function(base_size = 9, title_size = 10){
theme(
text = element_text( color = "black"),
plot.title = element_text(size = title_size, colour = "black", hjust = 0.5),
plot.subtitle = element_text( face = 'italic',
size = base_size, colour = "black", hjust = 0.5),
plot.caption = element_text( hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.major = element_line("grey80", size = 0.01),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
strip.background = element_blank(),
strip.text = element_text( size=9),
axis.title = element_text( size=9),
axis.text = element_text( size=7),
axis.text.y = element_text( size=7),
plot.background = element_blank(),
legend.background = element_blank(),
legend.title = element_text( colour = "black", face = "italic", size = 9),
legend.text = element_text( colour = "black", face = "italic", size = 7),
strip.text.x = element_text( size = 9),
legend.key.size = unit(.5, 'line')
)
}
mapTheme <- function(base_size = 9, title_size = 10){
theme(
text = element_text( color = "black"),
plot.title = element_text(size = title_size, colour = "black", hjust = 0.5),
plot.subtitle = element_text( face = 'italic',
size = base_size, colour = "black", hjust = 0.5),
plot.caption = element_text( hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size=base_size),
axis.title = element_text( size=9),
axis.text = element_blank(),
axis.text.y = element_blank(),
plot.background = element_blank(),
legend.background = element_blank(),
legend.title = element_text( colour = "black", face = "italic", size = 9),
legend.text = element_text( colour = "black", face = "italic", size = 7),
strip.text.x = element_text(size=base_size),
legend.key.size = unit(.5, 'line')
)
}
palette5 <- c("#f9b294","#f2727f","#c06c86","#6d5c7e","#315d7f")
palette4 <- c("#f9b294","#f2727f","#c06c86","#6d5c7e")
palette2 <- c("#f9b294","#f2727f")
palette1_main <- "#F2727F"
palette1_assist <- '#F9B294'
#st_write(PPRmoves,"data/output/PPRmoves.GeoJSON")
PPRmoves <- st_read("data/output/PPRmoves.GeoJSON")
originCount <-
PPRmoves %>%
select(placekey, visitor_home_cbgs, date_range_start) %>%
mutate(date_range_start = as_date(date_range_start),
month =  month(date_range_start)) %>%
dplyr::select(-date_range_start) %>%
mutate(visitor_home_cbgs = future_map(visitor_home_cbgs, function(x){
jsonlite::fromJSON(x) %>%
as_tibble()
})) %>%
unnest(visitor_home_cbgs)
gc()
gc()
originCount <-
PPRmoves %>%
select(placekey, visitor_home_cbgs, date_range_start) %>%
mutate(date_range_start = as_date(date_range_start),
month =  month(date_range_start)) %>%
dplyr::select(-date_range_start) %>%
mutate(visitor_home_cbgs = future_map(visitor_home_cbgs, function(x){
jsonlite::fromJSON(x) %>%
as_tibble()
})) %>%
unnest(visitor_home_cbgs)
gc()
rm(originCount)
gc()
st_write(originCount,"data/output/originCount.GeoJSON")
originCount <-
PPRmoves %>%
select(placekey, visitor_home_cbgs, date_range_start) %>%
mutate(date_range_start = as_date(date_range_start),
month =  month(date_range_start)) %>%
dplyr::select(-date_range_start) %>%
mutate(visitor_home_cbgs = future_map(visitor_home_cbgs, function(x){
jsonlite::fromJSON(x) %>%
as_tibble()
})) %>%
unnest(visitor_home_cbgs)
originCount <- originCount %>%
dplyr::select(placekey, month, starts_with("4")) %>%
pivot_longer(cols = starts_with("4"), names_to = "origin", values_to = "visits", values_drop_na = TRUE)
